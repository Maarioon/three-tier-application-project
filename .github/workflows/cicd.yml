name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full history for PR detection

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install  # Install all dependencies

      - name: Generate Release Notes
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          node --experimental-modules .github/workflows/generate-release-note.js | tee release-notes.md

      - name: Upload Release Notes as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: release-notes.md

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
            APP_DIR="/home/${{ secrets.EC2_USERNAME }}/myapp"
            mkdir -p $APP_DIR
            cd $APP_DIR

            if [ -d "$APP_DIR/.git" ]; then
              echo "Updating existing repository..."
              git pull origin main
            else
              echo "Cloning repository..."
              git clone https://github.com/${{ github.repository }}.git .
            fi

            echo "Starting application with Docker Compose..."
            docker compose down || true
            docker compose up -d --build
          EOF

  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR }}
        with:
          projectBaseDir: .
          args: >
            #-Dsonar.projectKey=three-tier-app
            -Dsonar.organization=three-tier-application-project
            -Dsonar.host.url=https://sonarcloud.io/project/overview?id=Maarioon_three-tier-application-project
