name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full history for PR detection

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          mkdir -p .github/workflows
          touch .github/workflows/generate-release-note.js
          npm init -y
          npm install @octokit/rest

      - name: Generate Release Notes
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # Create a simple release notes generation script if it doesn't exist
          cat > .github/workflows/generate-release-note.js << 'EOL'
          import { Octokit } from '@octokit/rest';

          async function generateReleaseNotes() {
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
            
            try {
              const { data: releases } = await octokit.repos.listReleases({
                owner: process.env.GITHUB_REPOSITORY.split('/')[0],
                repo: process.env.GITHUB_REPOSITORY.split('/')[1]
              });

              console.log('# Release Notes');
              console.log(`Generated on: ${new Date().toISOString()}`);
              console.log('');

              if (releases.length > 0) {
                releases.slice(0, 5).forEach(release => {
                  console.log(`## ${release.tag_name}`);
                  console.log(`Created at: ${release.created_at}`);
                  console.log(release.body || 'No description');
                  console.log('');
                });
              } else {
                console.log('No previous releases found.');
              }
            } catch (error) {
              console.error('Error generating release notes:', error);
              process.exit(1);
            }
          }

          generateReleaseNotes();
          EOL

          node --experimental-modules .github/workflows/generate-release-note.js | tee release-notes.md

      - name: Upload Release Notes as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: release-notes.md

      - name: Debug SSH Setup
        run: |
         set -x  # Enable debug mode
         mkdir -p ~/.ssh
         echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
         ls -lah ~/.ssh  # Check if id_rsa was created
         cat ~/.ssh/id_rsa  # Verify key (remove this after debugging)
         chmod 600 ~/.ssh/id_rsa
         ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
         cat ~/.ssh/known_hosts  # Verify known_hosts

      
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << 'EOF'
            APP_DIR="/home/${{ secrets.EC2_USERNAME }}/myapp"
            mkdir -p $APP_DIR
            cd $APP_DIR
            if [ -d "$APP_DIR/.git" ]; then
              echo "Updating existing repository..."
              git pull origin main
            else
              echo "Cloning repository..."
              git clone https://github.com/${{ github.repository }}.git .
            fi
            echo "Starting application with Docker Compose..."
            docker compose down || true
            docker compose up -d --build
          EOF

  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=SONAR_TOKEN
            -Dsonar.organization=three-tier-application-project
            -Dsonar.host.url=https://sonarcloud.io/project/overview?id=Maarioon_three-tier-application-project
